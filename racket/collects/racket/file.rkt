#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Fira Mono\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 7462 0 28 3 17 #"#lang racket/base"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"path.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"setup/dirs"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 18 #"setup/cross-system"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"for-syntax"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 22 #"setup/path-to-relative"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 22 #"delete-directory/files"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 20 #"copy-directory/files"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"make-directory*"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"make-parent-directory*"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"make-tempora"
0 0 14 3 1 #"r"
0 0 14 3 6 #"y-file"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 24 #"make-temporary-directory"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"get-preference"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"put-preferences"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 26 #"preferences-lock-file-mode"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 33 #"make-handle-get-preference-locked"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"make-lock-file-name"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"fold-files"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"find-files"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"pathlist-closure"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"file->string"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"file->bytes"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"file->value"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"file->lines"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"file->bytes-lines"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"file->list"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"display-to-file"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"write-to-file"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 21 #"display-lines-to-file"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"user-read-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"user-write-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"user-execute-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"group-read-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"group-write-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"group-execute-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"other-read-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"other-write-bit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"other-execute-bit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"private/portlines.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"delete-directory/files"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 23 3 13 #"#:must-exist?"
0 0 24 3 2 #" ["
0 0 14 3 11 #"must-exist?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"delete-directory/files"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 22 #"file-or-directory-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 4 #"file"
0 0 24 3 1 #" "
0 0 14 3 4 #"link"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"delete-file*"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 9 #"directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"directory-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 16 #"delete-directory"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 14 #"directory-link"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 16 #"delete-directory"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 11 #"must-exist?"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 29 #"raise-not-a-file-or-directory"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"delete-directory/files"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"delete-file*"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"windows"
0 0 24 3 2 #" ("
0 0 14 3 11 #"system-type"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 56 #";; Deleting a file doesn't remove the file name from the"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 56 #";; parent directory until all references are closed, and"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 55 #";; other processes (like the search indexer) might open"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 55 #";; files. So, try to move a file to the temp directory,"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 60
#";; then delete from there. That way, the enclosing directory"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 51 #";; can still be deleted. The move might fail if the"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 51 #";; temp directory is on a different volume, though."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"tmp"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 3 #"tmp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 3 #"tmp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"raise-not-a-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"raise"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 24 #"make-exn:fail:filesystem"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 69
(5
 #"\"~a: encountered path that is neither file nor directory\\n  path: ~"
 #"a\""
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 26 #"current-continuation-marks"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"copy-directory/files"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 23 3 22 #"#:keep-modify-seconds?"
0 0 24 3 2 #" ["
0 0 14 3 20 #"keep-modify-seconds?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 23 3 17 #"#:preserve-links?"
0 0 24 3 2 #" ["
0 0 14 3 15 #"preserve-links?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 3 #"src"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 3 #"] ["
0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 15 #"preserve-links?"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"link-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 27 #"make-file-or-directory-link"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"resolve-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"dest"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"copy-file"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 20 #"keep-modify-seconds?"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 32 #"file-or-directory-modify-seconds"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"dest"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 32 #"file-or-directory-modify-seconds"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"make-directory"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"directory-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 29 #"raise-not-a-file-or-directory"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 20 #"copy-directory/files"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-directory*"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"make-directory*"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"make-directory*"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 27 #"exn:fail:filesystem:exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"make-parent-directory*"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"make-parent-directory*"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   [("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-directory*"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 67
#";; Do nothing with an immediately relative path or a root directory"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"void"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; MAKING TEMPORARY FILES & DIRECTORIES"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; ------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; There are four related function defined in this section:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;   1. make-temporary-file        \\"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;                                  > based on format"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;   2. make-temporary-directory   /"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;   3. make-temporary-file*       \\"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;                                  > based on bytes-append"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;   4. make-temporary-directory*  /"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 38 #"internal-make-temporary-file/directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tmpdir"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"temp-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 15 #"current-seconds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 2 #"ms"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 8 #"truncate"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 5 #"tries"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 1 #"d"
0 0 15 3 1 #"e"
0 0 15 3 4 #"fine"
0 0 24 3 1 #" "
0 0 14 3 3 #"pth"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"path->complete-path"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-name"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 64
#";; docs promise argument will be a string containing only digits"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"~a~a\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 2 #"ms"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #" ["
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 14 #"relative-path?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 6 #"tmpdir"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 5 #"]))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 4 #" ([("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 27 #"exn:fail:filesystem:exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 26 #"exn:fail:filesystem:errno?"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"errno"
0 0 24 3 2 #" ("
0 0 14 3 31 #"exn:fail:filesystem:errno-errno"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"windows"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"errno"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"eqv?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"errno"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 21 #"; ERROR_ACCESS_DENIED"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 50 #";; On Windows, if the target path refers to a file"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 42 #";; that has been deleted but is still open"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 53 #";; somewhere, then an access-denied error is reported"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 48 #";; instead of a file-exists error; there appears"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 46 #";; to be no way to detect that it was really a"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 50 #";; file-still-exists error. Try again for a while."
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 46 #";; There's still a small chance that this will"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 48 #";; fail, but it's vanishingly small at 32 tries."
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 45 #";; If ERROR_ACCESS_DENIED really is the right"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 51 #";; error (e.g., because the target directory is not"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 45 #";; writable), we'll take longer to get there."
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 5 #"tries"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 17 3 28 #";; try again with a new name"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"ms"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 5 #"tries"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"pth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"copy-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 3 #"pth"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 17 #"close-output-port"
0 0 24 3 2 #" ("
0 0 14 3 16 #"open-output-file"
0 0 24 3 1 #" "
0 0 14 3 3 #"pth"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"pth"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"check-base-dir"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 3 #") ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 24 #"\"(or/c path-string? #f)\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 8 #"base-dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-bytes"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bytes?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bytes?\""
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 48 #"do-make-temporary-file/directory:check-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 19 #"#:wrapped-make-name"
0 0 24 3 1 #" "
0 0 14 3 16 #"wraped-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 23 #"#:on-complete-with-base"
0 0 24 3 1 #" "
0 0 14 3 18 #"complete-with-base"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 24 #"#:on-syntactic-directory"
0 0 24 3 1 #" "
0 0 14 3 19 #"syntactic-directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 64
#";; docs promise argument will be a string containing only digits"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"wraped-make-name"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #" ("
0 0 14 3 14 #"complete-path?"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";; On Windows, base-dir could be a drive specification,"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 76
(6
 #";; in which case it is ok for result to be an absolute path without a"
 #" drive."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"complete-with-base"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"directory"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([{"
0 0 14 3 5 #"_base"
0 0 24 3 1 #" "
0 0 14 3 5 #"_name"
0 0 24 3 1 #" "
0 0 14 3 12 #"must-be-dir?"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 12 #"must-be-dir?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"syntactic-directory"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 38 #"internal-make-temporary-file/directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 39 #"do-make-temporary-file/directory:format"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"directory"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 35 #"\"(or/c path-string? 'directory #f)\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 9 #"copy-from"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"check-base-dir"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"string?\""
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-name"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bad-result-msg"
0 0 24 3 1 #" "
0 0 14 3 7 #"details"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 61
#";; i.e. the result is valid as path, but not for our purposes"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 47 #"\"given template produced an invalid result;\\n \""
0 0 24 3 1 #" "
0 0 14 3 7 #"details"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 48 #"do-make-temporary-file/directory:check-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 19 #"#:wrapped-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 10 #"digits-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 18 #"exn:fail:contract?"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 20 #"\"malformed template\""
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 10 #"\"expected\""
0 0 24 3 2 #" ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 19 3 45 #"\"a format string accepting 1 string argument\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 7 #"\"given\""
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-name"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 41 #"\"given template produced an invalid path\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 10 #"\"promised\""
0 0 24 3 2 #" ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 10 #"\"produced\""
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 10 #"\"template\""
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 23 #"#:on-complete-with-base"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 55 #";; On Windows, base-dir could be a drive specification,"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 76 6 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"bad-result-msg"
0 0 24 3 1 #" "
0 0 19 3 49 #"\"complete path can not be combined with base-dir\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 10 #"\"template\""
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 10 #"\"produced\""
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 10 #"\"base-dir\""
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 24 #"#:on-syntactic-directory"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"bad-result-msg"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 19 3 69
(7
 #"\"syntactic directory path not allowed unless copy-from is 'directory"
 #"\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 10 #"\"template\""
0 0 24 3 1 #" "
0 0 14 3 8 #"template"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 10 #"\"produced\""
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 11 #"\"copy-from\""
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 45 #"do-make-temporary-file/directory:bytes-append"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 6 #"suffix"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 17 #"#:check-copy-from"
0 0 24 3 1 #" "
0 0 14 3 15 #"check-copy-from"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 24 #"#:on-syntactic-directory"
0 0 24 3 1 #" "
0 0 14 3 22 #"on-syntactic-directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"check-bytes"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"check-bytes"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 6 #"suffix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"check-base-dir"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"check-copy-from"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-name/bytes"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"bytes-append"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 4 #"ctxt"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 19 #"path-element->bytes"
0 0 24 3 2 #" ("
0 0 14 3 20 #"string->path-element"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"suffix"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 48 #"do-make-temporary-file/directory:check-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 10 #"digits-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"bytes->path"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-name/bytes"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 18 #"#:wraped-make-name"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 10 #"digits-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"bs"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-name/bytes"
0 0 24 3 1 #" "
0 0 14 3 10 #"digits-str"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 9 #"exn:fail?"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 4 #"----"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"bytes->path"
0 0 24 3 1 #" "
0 0 14 3 2 #"bs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 24 #"#:on-syntactic-directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"on-"
0 0 14 3 19 #"syntactic-directory"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 23 #"#:on-complete-with-base"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 18 #"complete-with-base"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-temporary-file*/context"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 6 #"suffix"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 20 #"make-temporary-file*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 4 #"or/c"
0 0 19 3 1 #" "
0 0 19 3 12 #"path-string?"
0 0 19 3 1 #" "
0 0 19 3 3 #"#f)"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 9 #"copy-from"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 40 #"make-make-temporary-file/directory*-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 6 #"suffix"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 3 #";; "
0 0 17 3 1 #"<"
0 0 17 3 1 #"<"
0 0 17 3 1 #"<"
0 0 17 3 2 #"<<"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 38 #"internal-make-temporary-file/directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 24 3 2 #" ("
0 0 14 3 21 #"syntax->tmp-context-s"
0 0 14 3 5 #"tring"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"line"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"syntax-line"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"syntax-column"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax-source"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"str-src"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"regexp-replace"
0 0 24 3 1 #" "
0 0 19 3 4 #"#rx\""
0 0 19 3 2 #"^<"
0 0 19 3 1 #"("
0 0 19 3 3 #".*?"
0 0 19 3 1 #")"
0 0 19 3 1 #">"
0 0 19 3 1 #"("
0 0 19 3 4 #"?=/)"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 29 #"path->relative-string/library"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 2 #") "
0 0 14 3 6 #"source"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"str-loc"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"-~a-~a"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"--~a"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"combined-str"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 7 #"str-src"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"rkttmp"
0 0 19 3 1 #"\""
0 0 24 3 2 #") "
0 0 14 3 7 #"str-loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 3 2 #" ("
0 0 14 3 15 #"regexp-replace*"
0 0 24 3 1 #" "
0 0 19 3 4 #"#rx\""
0 0 19 3 12 #"[<>:\\\"/\\\\|]\""
0 0 24 3 1 #" "
0 0 14 3 12 #"combined-str"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"max-len"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 17 3 15 #";; must be even"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"not-too-long-str"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"max-len"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"max-len"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 6 #"\"----\""
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"max-len"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 13 #"sanitized-str"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 16 #"not-too-long-str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 24 3 2 #" ("
0 0 14 3 29 #"infer-temporary-file-template"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 26 #"syntax->tmp-context-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"_~a\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 24 3 2 #" ("
0 0 14 3 34 #"infer-temporary-file-context-bytes"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; We rely on this being ascii that Racket has used"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 37 #";; successfully from time immemorial."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"string->bytes/utf-8"
0 0 24 3 2 #" ("
0 0 14 3 26 #"syntax->tmp-context-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-temporary-directory"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 11 #"with-syntax"
0 0 24 3 3 #" (["
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datum->syntax"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 5 #"#%app"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 11 #"syntax-case"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#'"
0 0 14 3 29 #"make-temporary-directory/proc"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 29 #"make-temporary-directory/proc"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"'"
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 29 #"infer-temporary-file-template"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 29 #"make-temporary-directory/proc"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"'"
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 29 #"infer-temporary-file-template"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"whatever"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#'"
0 0 24 3 1 #"("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 29 #"make-temporary-directory/proc"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"whatever"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 11 #"with-syntax"
0 0 24 3 3 #" (["
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datum->syntax"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 5 #"#%app"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"infer-template"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 2 #" ["
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 21 3 5 #"#''#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 2 #" ["
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 21 3 5 #"#''#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 24 #"make-temporary-file/proc"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 29 #"infer-temporary-file-template"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 28 3 2 #"#,"
0 0 14 3 9 #"copy-from"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 28 3 2 #"#,"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 11 #"syntax-case"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#'"
0 0 14 3 24 #"make-temporary-file/proc"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"infer-template"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"infer-template"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"infer-template"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"infer-template"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"keyword?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"infer-template"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"whatever"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#'"
0 0 24 3 1 #"("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 24 #"make-temporary-file/proc"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"whatever"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ["
0 0 14 3 24 #"make-temporary-file/proc"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 29 #"make-temporary-directory/proc"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 3 2 #" ["
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"rkttmp~a\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 23 3 11 #"#:copy-from"
0 0 24 3 2 #" ["
0 0 14 3 10 #"_copy-from"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 2 #" ["
0 0 14 3 9 #"_base-dir"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ["
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 10 #"_copy-from"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ["
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 14 3 9 #"_base-dir"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 39 #"do-make-temporary-file/directory:format"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 19 #"make-temporary-file"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 14 3 9 #"copy-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-temporary-directory"
0 0 24 3 2 #" ["
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"rkttmp~a\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 2 #" ["
0 0 14 3 8 #"base-dir"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 39 #"do-make-temporary-file/directory:format"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 24 #"make-temporary-directory"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 8 #"template"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"directory"
0 0 24 3 1 #" "
0 0 14 3 8 #"base-dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 19 #"make-temporary-file"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 24 #"make-temporary-directory"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;  Open a temporary path for writing, automatically renames after,"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;  and arranges to delete path if there's an exception. Uses the an"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;  extra rename dance as needed under Windows to ensure that any"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;  existing readers of the file do not prevent updating the"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;  file. Breaks are managed so that the port is reliably closed and"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;  the file is reliably deleted if there's a break."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 4 #"proc"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 23 3 16 #"#:security-guard"
0 0 24 3 2 #" ["
0 0 14 3 5 #"guard"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 23 3 21 #"#:rename-fail-handler"
0 0 24 3 2 #" ["
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"(procedure-arity-includes/c 2)\""
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 15 #"security-guard?"
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"(or/c #f security-guard?)\""
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 28 #"call-with-atomic-output-file"
0 0 24 3 1 #" "
0 0 19 3 42 #"\"(or/c #f (procedure-arity-includes/c 2))\""
0 0 24 3 1 #" "
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"try-delete-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #" ["
0 0 14 3 6 #"noisy?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; Attempt to delete, but give up if it doesn't work:"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"bp"
0 0 24 3 2 #" ("
0 0 14 3 30 #"current-break-parameterization"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 8 #"tmp-path"
0 0 24 3 2 #" ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 22 #"current-security-guard"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 22 #"current-security-guard"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 9 #"path-only"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #") ("
0 0 14 3 17 #"current-directory"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 3 #"ok?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"dynamic-wind"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"begin0"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"out"
0 0 24 3 2 #" ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 22 #"current-security-guard"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 22 #"current-security-guard"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 16 #"open-output-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"truncate/replace"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"dynamic-wind"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 32 #"call-with-break-parameterization"
0 0 24 3 1 #" "
0 0 14 3 2 #"bp"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 3 #"out"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 17 #"close-output-port"
0 0 24 3 1 #" "
0 0 14 3 3 #"out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"ok?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 22 #"current-security-guard"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 22 #"current-security-guard"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"ok?"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 4 #"void"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 15 #"try-delete-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 5 #"raise"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"system-type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 7 #"windows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 19 #"rename-fail-handler"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"with-handlers*"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 32 #"call-with-break-parameterization"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 14 3 2 #"bp"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 19 #"rename-fail-handler"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 9 #"tmp-path2"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 3 1 #" "
0 0 23 3 10 #"#:base-dir"
0 0 24 3 2 #" ("
0 0 14 3 9 #"path-only"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 9 #"tmp-path2"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 15 #"try-delete-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"tmp-path2"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 15 #"try-delete-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-path"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"with-pref-params"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 28 #"read-square-bracket-as-paren"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 25 #"read-curly-brace-as-paren"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 28 #"read-square-bracket-with-tag"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 25 #"read-curly-brace-with-tag"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 15 #"read-accept-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 20 #"read-accept-compiled"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 21 #"read-accept-bar-quote"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 17 #"read-accept-graph"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 23 #"read-decimal-as-inexact"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 9 #"read-cdot"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 15 #"read-accept-dot"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 21 #"read-accept-infix-dot"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 22 #"read-accept-quasiquote"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 18 #"read-accept-reader"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 12 #"print-struct"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 11 #"print-graph"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 17 3 57 #"; <--- FIXME: temporary solution to DrRacket-pref problem"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 9 #"print-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 19 #"print-vector-length"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 17 #"current-readtable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"thunk"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"pref-cache"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-weak-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"path->key"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 2 #" ("
0 0 14 3 21 #"bytes->string/latin-1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"path->bytes"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"pref-cache-install!"
0 0 24 3 1 #" "
0 0 14 3 6 #"fn-key"
0 0 24 3 1 #" "
0 0 14 3 7 #"fn-date"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"table"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 14 #"weak-box-value"
0 0 24 3 1 #" "
0 0 14 3 10 #"pref-cache"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"make-hasheq"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"path->key"
0 0 24 3 1 #" "
0 0 14 3 6 #"fn-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 32 #"file-or-directory-modify-seconds"
0 0 24 3 1 #" "
0 0 14 3 7 #"fn-date"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 6 #"-inf.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 2 #" ("
0 0 14 3 14 #"weak-box-value"
0 0 24 3 1 #" "
0 0 14 3 10 #"pref-cache"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 10 #"pref-cache"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-weak-box"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-pathless-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"bytes->path-element"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"bytes-append"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"windows"
0 0 24 3 2 #" ("
0 0 14 3 17 #"cross-system-type"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 4 #"#\"_\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 19 3 4 #"#\".\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 7 #"#\"LOCK\""
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 19 #"path-element->bytes"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"make-lock-file-name"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 11 #"case-lambda"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   [("
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"relative"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 28 #"make-pathless-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   [("
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 13 #"path-element?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"path-element?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 28 #"make-pathless-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"preferences-lock-file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 11 #"system-type"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"windows"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"file-lock"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"exists"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 23 3 11 #"#:lock-file"
0 0 24 3 2 #" ["
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 23 3 7 #"#:delay"
0 0 24 3 2 #" ["
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.01"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 23 3 11 #"#:max-delay"
0 0 24 3 2 #" ["
0 0 14 3 9 #"max-delay"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"(or/c path-string? #f)\""
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 6 #"shared"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"exclusive"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"(or/c 'shared 'exclusive)\""
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 3 #") ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"(-> any)\""
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 3 #") ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"(-> any)\""
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 3 #") ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"(or/c path-string? #f)\""
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"real?"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 9 #"negative?"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"(>=/c 0.0)\""
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"real?"
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 9 #"negative?"
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 27 #"call-with-file-lock/timeout"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"(>=/c 0.0)\""
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"real-lock-file"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 19 #"call-with-file-lock"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 14 #"real-lock-file"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"thunk"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"sleep"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"failure-thunk"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 30 #"call-with-preference-file-lock"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 14 3 13 #"get-lock-file"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-style"
0 0 24 3 2 #" ("
0 0 14 3 26 #"preferences-lock-file-mode"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #" ("
0 0 14 3 13 #"get-lock-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-style"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 9 #"file-lock"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 19 3 11 #"\"~a ~a: ~e\""
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 19 3 31 #"\"some other process has a lock\""
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 19 3 30 #"\"on the preferences lock file\""
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 9 #"lock-file"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 19 3 12 #"\"~a, ~a: ~e\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 19 3 49 #"\"some other process has the preference-file lock\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 19 3 48 #"\"as indicated by the existence of the lock file\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 9 #"lock-file"
0 0 24 3 6 #")]))))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"call-with-file-lock"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 3 1 #" "
0 0 23 3 12 #"#:lock-style"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-style"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"call-with-file-lock"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 14 3 5 #"thunk"
0 0 24 3 1 #" "
0 0 14 3 13 #"failure-thunk"
0 0 24 3 1 #" "
0 0 23 3 12 #"#:lock-style"
0 0 24 3 2 #" ["
0 0 14 3 10 #"lock-style"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"file-lock"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-style"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"file-lock"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 44 #";; Create the lock file if it doesn't exist:"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 27 #"exn:fail:filesystem:exists?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 17 #"close-output-port"
0 0 24 3 2 #" ("
0 0 14 3 16 #"open-output-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"error"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      ((("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"exclusive"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 3 #") ("
0 0 15 3 22 #"call-with-output-file*"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"update"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 9 #"lock-file"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 19 #"port-try-file-lock?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 12 #";; got lock:"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"call-with-values"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 12 #"dynamic-wind"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 5 #"thunk"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 16 #"port-file-unlock"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 19 #";; didn't get lock:"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 13 #"failure-thunk"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 11 #"; = 'exists"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 50 #";; Only a write lock is needed, and the file lock "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 46 #";; is implemented by the presence of the file:"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 15 3 6 #"shared"
0 0 24 3 3 #") ("
0 0 14 3 5 #"thunk"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 9 #"exclusive"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 27 #"exn:fail:filesystem:exists?"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 13 #"failure-thunk"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 13 #";; Grab lock:"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 17 #"close-output-port"
0 0 24 3 2 #" ("
0 0 14 3 16 #"open-output-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"error"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"dynamic-wind"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"thunk"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 16 #";; Release lock:"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-prefs"
0 0 24 3 1 #" "
0 0 14 3 10 #"flush-mode"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"read-prefs"
0 0 24 3 1 #" "
0 0 14 3 17 #"default-pref-file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 17 #"default-pref-file"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 17 3 51 #";; Using `file-exists?' means there's technically a"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 17 3 54 #";; race condition, but something has gone really wrong"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 17 3 26 #";; if the file disappears."
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 17 3 37 #";; Look for old PLT Scheme pref file:"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"alt-f"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 11 #"system-type"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 7 #"windows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 10 #"build-path"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"pref-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                    "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"PLT Scheme\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"plt-prefs.ss\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 6 #"macosx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 10 #"build-path"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"pref-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                    "
0 0 19 3 25 #"\"org.plt-scheme.prefs.ss\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 4 #"unix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 16 #"expand-user-path"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"~/.plt-scheme/plt-prefs.ss\""
0 0 24 3 5 #")])])"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 5 #"alt-f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 5 #"alt-f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 17 3 52 #";; Last chance: check for a \"racket-prefs.rtkd\" file"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 17 3 34 #";; in the configuration directory:"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 6 #"values"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 15 #"find-config-dir"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ["
0 0 14 3 3 #"c-f"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"racket-prefs.rktd\""
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"c-f"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"c-f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 3 #"c-f"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 17 3 30 #";; Trigger a filesystem error:"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 2 #"#f"
0 0 24 3 8 #"))))))])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"prefs"
0 0 24 3 2 #" ("
0 0 14 3 16 #"with-pref-params"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 14 #"exn:fail:read?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"log-error"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"error reading preferences: ~a\""
0 0 24 29 1 #"\n"
0 0 24 3 68
#"                                                                   ("
0 0 14 3 11 #"exn-message"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                          "
0 0 14 3 4 #"null"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 30 #"call-with-preference-file-lock"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 14 #"get-preference"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 15 3 6 #"shared"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"pref-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 20 #"with-input-from-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"read"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 20 #"with-input-from-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"read"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 46 #";; Make sure file content had the right shape:"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"prefs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"symbol?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 5 #"prefs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"prefs"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"log-error"
0 0 24 3 1 #" "
0 0 19 3 62
#"\"preference file content is not a list of symbol--value lists\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"null"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 19 #"path->complete-path"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"pref-file"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"cache"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"table"
0 0 24 3 2 #" ("
0 0 14 3 14 #"weak-box-value"
0 0 24 3 1 #" "
0 0 14 3 10 #"pref-cache"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 2 #" ("
0 0 14 3 9 #"path->key"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 5 #"cache"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 10 #"flush-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"flush-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"timestamp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"cache"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 32 #"file-or-directory-modify-seconds"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 6 #"-inf.0"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"cache"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"ts"
0 0 24 3 2 #" ("
0 0 14 3 32 #"file-or-directory-modify-seconds"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 2 #"  "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 6 #"-inf.0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 10 #"read-prefs"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"pref-cache-install!"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 33 #"make-handle-get-preference-locked"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ["
0 0 14 3 10 #"fail-thunk"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ["
0 0 14 3 14 #"refresh-cache?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"timestamp"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ["
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 23 3 12 #"#:lock-there"
0 0 24 3 2 #" ["
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 23 3 11 #"#:max-delay"
0 0 24 3 2 #" ["
0 0 14 3 9 #"max-delay"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lock-filename"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"sleep"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"get-preference"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 10 #"fail-thunk"
0 0 24 3 1 #" "
0 0 14 3 14 #"refresh-cache?"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 12 #"#:lock-there"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 9 #"new-delay"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-delay"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 33 #"make-handle-get-preference-locked"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 9 #"new-delay"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 10 #"fail-thunk"
0 0 24 3 1 #" "
0 0 14 3 14 #"refresh-cache?"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 23 3 12 #"#:lock-there"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-there"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 23 3 11 #"#:max-delay"
0 0 24 3 1 #" "
0 0 14 3 9 #"max-delay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 10 #"lock-there"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"get-preference"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ["
0 0 14 3 10 #"fail-thunk"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 14 #"refresh-cache?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"timestamp"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 20 #"#:timeout-lock-there"
0 0 24 3 2 #" ["
0 0 14 3 18 #"timeout-lock-there"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 12 #"#:lock-there"
0 0 24 3 2 #" ["
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 33 #"make-handle-get-preference-locked"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 21 3 4 #"0.01"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 4 #"name"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 10 #"fail-thunk"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 14 #"refresh-cache?"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 23 3 12 #"#:lock-there"
0 0 24 3 1 #" "
0 0 14 3 18 #"timeout-lock-there"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 11 #"#:use-lock?"
0 0 24 3 2 #" ["
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"get-preference"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"symbol?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 10 #"fail-thunk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"fail-thunk"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"get-preference"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"(-> any)\""
0 0 24 3 1 #" "
0 0 14 3 10 #"fail-thunk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 15 3 6 #"let/ec"
0 0 24 3 1 #" "
0 0 14 3 3 #"esc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-prefs"
0 0 24 3 1 #" "
0 0 14 3 14 #"refresh-cache?"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 9 #"use-lock?"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 10 #"lock-there"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 3 #"esc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 14 3 4 #"file"
0 0 24 3 8 #"))))))])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"m"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 10 #"fail-thunk"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"put-preferences"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 2 #" ["
0 0 14 3 10 #"lock-there"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"] ["
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 3 #") ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"put-preferences"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"(listof symbol?)\""
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"put-preferences"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"list?\""
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 15 #"put-preferences"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 73
(8
 #"\"the length of the name list does not match the length of the value "
 #"list\""
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 18 #"\"name list length\""
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 19 #"\"value list length\""
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 11 #"\"name list\""
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 12 #"\"value list\""
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"pref-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"filename"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"pref-file"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"dir"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 17 #"current-directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 4 #"base"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 15 #"make-directory*"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"values"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 19 #"make-lock-file-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 3 #"dir"
0 0 24 3 6 #"))))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 30 #"call-with-preference-file-lock"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 15 #"put-preferences"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 9 #"exclusive"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 9 #"lock-file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-prefs"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"]["
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 7 #"reverse"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 1 #"a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 14 3 5 #"names"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 7 #")))])))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 58
#";; To write the file, copy the old one to a temporary name"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 56 #";; (preserves permissions, etc), write to the temp file,"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 57 #";; then move (atomicly) the temp file to the normal name."
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"tmp-file"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-temporary-file"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 11 #"\"TMPPREF~a\""
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 9 #"pref-file"
0 0 24 3 2 #") "
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 8 #"pref-dir"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 56 #";; If something goes wrong, try to delete the temp file."
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 9 #"exn:fail?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 11 #"delete-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-file"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 5 #"raise"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 24 #";; Write to temp file..."
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 19 #"with-output-to-file"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-file"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"truncate/replace"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"with-pref-params"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 52 #";; If a pref value turns out to be unreadable, raise"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 53 #";;  an exception instead of creating a bad pref file."
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 16 #"print-unreadable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 47 #";; Poor man's pretty-print: one line per entry."
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"(\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 13 #"\" (~s\\n  (\\n\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"   ~s\\n\""
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"  ))\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 7 #"\" ~s\\n\""
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 5 #"\")\\n\""
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 62
#";; Install the new table in the cache. It's possible that this"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 61
#";; cache entry will be replaced by a reading thread before we"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 60
#";; move the file, but that's ok. It just means that a future"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 42 #";; reading thread will have to read again."
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 19 #"pref-cache-install!"
0 0 24 3 2 #" ("
0 0 14 3 19 #"path->complete-path"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 16 #"find-system-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"pref-file"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"tmp-file"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 24 #"rename-file-or-directory"
0 0 24 3 1 #" "
0 0 14 3 8 #"tmp-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"pref-file"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 10 #"lock-there"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(9
 #";; fold-files : (pathname sym alpha -> alpha) alpha pathname/#f -> al"
 #"pha"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fold-files"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"init"
0 0 24 3 2 #" ["
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"] ["
0 0 14 3 13 #"follow-links?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 8 #"keep-fst"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"call-with-values"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 11 #"case-lambda"
0 0 24 3 3 #" [("
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 4 #"] [("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"do-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 13 #"follow-links?"
0 0 24 3 3 #") ("
0 0 14 3 12 #"link-exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"keep-fst"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"link"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"call-with-values"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ["
0 0 14 3 8 #"descend?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"descend?"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 8 #"do-paths"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 14 #"directory-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 3 #"acc"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #") ("
0 0 14 3 8 #"keep-fst"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"file"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 12 #"link-exists?"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #") ("
0 0 14 3 8 #"keep-fst"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"link"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 4 #"))] "
0 0 17 3 16 #"; dangling links"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"fold-files"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"path disappeared: ~e\""
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"do-paths"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #") "
0 0 14 3 3 #"acc"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"do-paths"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 3 #") ("
0 0 14 3 7 #"do-path"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #") "
0 0 14 3 3 #"acc"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"to-path"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string->path"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #" ("
0 0 14 3 7 #"do-path"
0 0 24 3 2 #" ("
0 0 14 3 7 #"to-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #") "
0 0 14 3 4 #"init"
0 0 24 3 3 #") ("
0 0 14 3 8 #"do-paths"
0 0 24 3 2 #" ("
0 0 14 3 14 #"directory-list"
0 0 24 3 2 #") "
0 0 14 3 4 #"init"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-files"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ["
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 15 #"#:follow-links?"
0 0 24 3 2 #" ["
0 0 14 3 13 #"follow-links?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 26 #"#:skip-filtered-directory?"
0 0 24 3 2 #" ["
0 0 14 3 24 #"skip-filtered-directory?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"reverse"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"fold-files"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 24 #"skip-filtered-directory?"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"kind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 3 #"acc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 13 #"follow-links?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"pathlist-closure"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 23 3 15 #"#:follow-links?"
0 0 24 3 2 #" ["
0 0 14 3 13 #"follow-links?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 23 3 13 #"#:path-filter"
0 0 24 3 2 #" ["
0 0 14 3 11 #"path-filter"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 5 #"paths"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 13 #"simplify-path"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 13 #"follow-links?"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 12 #"link-exists?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"p2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"resolve-path"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"relative-path?"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 1 #" "
0 0 14 3 20 #"path->directory-path"
0 0 24 3 1 #" "
0 0 14 3 6 #"values"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"build-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 2 #"p2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 5 #"paths"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"loop2"
0 0 24 3 3 #" (["
0 0 14 3 4 #"path"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 13 #"follow-links?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 12 #"link-exists?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 12 #"file-exists?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 17 #"directory-exists?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"find-files"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 11 #"path-filter"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 20 #"path->directory-path"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 23 3 26 #"#:skip-filtered-directory?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 23 3 15 #"#:follow-links?"
0 0 24 3 1 #" "
0 0 14 3 13 #"follow-links?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"pathlist-closure"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 19 3 30 #"\"file/directory not found: ~a\""
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 6 #"))])])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"dir?"
0 0 24 3 3 #") ("
0 0 14 3 10 #"split-path"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"path?"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"loop2"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"paths"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 2 #") "
0 0 14 3 1 #"r"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"check-file-mode"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"binary"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"(or/c 'binary 'text)\""
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"file->x"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 14 3 6 #"read-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"x-append"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"check-file-mode"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"sz"
0 0 24 3 2 #" ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 20 #"exn:fail:filesystem?"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 9 #"file-size"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 60
#";; There's a good chance that `file-size' gets all the data:"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"read-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"sz"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 24 #";; ... but double-check:"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"more"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"l"
0 0 24 3 2 #" ("
0 0 14 3 6 #"read-x"
0 0 24 3 1 #" "
0 0 21 3 4 #"4096"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 8 #"x-append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 4 #"more"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"file->x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 12 #"file->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 11 #"read-string"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"file->bytes"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"file->x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"file->bytes"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 10 #"read-bytes"
0 0 24 3 1 #" "
0 0 14 3 12 #"bytes-append"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"file->value"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"file->value"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"check-file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"file->value"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"read"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"file->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ["
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"read"
0 0 24 3 2 #"] "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-path"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"file->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"check-file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"file->list"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 25 #"procedure-arity-includes?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"file->list"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"(procedure-arity-includes/c 1)\""
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-port"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")]) "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"file->x-lines"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"read-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-mode"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"check-file-mode"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 21 #"call-with-input-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 13 #"port->x-lines"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"read-line"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:line-mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"any"
0 0 24 3 2 #"] "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"file->x-lines"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"read-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"file->bytes-lines"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:line-mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"any"
0 0 24 3 2 #"] "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"file->x-lines"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 17 #"file->bytes-lines"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"line-mode"
0 0 24 3 1 #" "
0 0 14 3 9 #"file-mode"
0 0 24 3 1 #" "
0 0 14 3 15 #"read-bytes-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"->file"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 14 3 5 #"write"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"path-string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"path-string?\""
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"binary"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"(or/c 'binary 'text)\""
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 7 #"replace"
0 0 24 3 1 #" "
0 0 14 3 8 #"truncate"
0 0 24 3 1 #" "
0 0 14 3 16 #"truncate/replace"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 19 3 68
(10
 #"\"(or/c 'error 'append 'update 'replace 'truncate 'truncate/replace)"
 #"\""
) 0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 22 #"call-with-output-file*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 14 3 5 #"write"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"display-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"] "
0 0 23 3 8 #"#:exists"
0 0 24 3 2 #" ["
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"error"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"->file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"display-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 2 #"] "
0 0 23 3 8 #"#:exists"
0 0 24 3 2 #" ["
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"error"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"->file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"write"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"display-lines-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 23 3 6 #"#:mode"
0 0 24 3 2 #" ["
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"binary"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 23 3 8 #"#:exists"
0 0 24 3 2 #" ["
0 0 14 3 6 #"exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"error"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 23 3 11 #"#:separator"
0 0 24 3 2 #" ["
0 0 14 3 7 #"newline"
0 0 24 3 1 #" "
0 0 19 3 5 #"#\"\\n\""
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 21 #"display-lines-to-file"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"list?\""
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"->file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 21 #"display-lines-to-file"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 6 #"exists"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 14 #"do-lines->port"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 7 #"newline"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"user-read-bit"
0 0 24 3 5 #"     "
0 0 21 3 5 #"#o400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-write-bit"
0 0 24 3 4 #"    "
0 0 21 3 5 #"#o200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"user-execute-bit"
0 0 24 3 2 #"  "
0 0 21 3 5 #"#o100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"group-read-bit"
0 0 24 3 4 #"    "
0 0 21 3 5 #"#o040"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"group-write-bit"
0 0 24 3 3 #"   "
0 0 21 3 5 #"#o020"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"group-execute-bit"
0 0 24 3 1 #" "
0 0 21 3 5 #"#o010"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"other-read-bit"
0 0 24 3 4 #"    "
0 0 21 3 5 #"#o004"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"other-write-bit"
0 0 24 3 3 #"   "
0 0 21 3 5 #"#o002"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"other-execute-bit"
0 0 24 3 1 #" "
0 0 21 3 5 #"#o001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
